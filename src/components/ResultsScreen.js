import React from 'react';\n\nconst ResultsScreen = ({ results }) => {\n  if (!results) return null;\n\n  // Function to get gradient color based on score percentage\n  const getScoreColor = (score) => {\n    if (score >= 80) return 'from-green-500 to-green-600';\n    if (score >= 60) return 'from-blue-500 to-blue-600';\n    if (score >= 40) return 'from-yellow-500 to-yellow-600';\n    return 'from-red-500 to-red-600';\n  };\n\n  // Function to get text color based on score percentage\n  const getTextColor = (score) => {\n    if (score >= 80) return 'text-green-600';\n    if (score >= 60) return 'text-blue-600';\n    if (score >= 40) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  // Function to get dimension title\n  const getDimensionTitle = (key) => {\n    const titles = {\n      'structureVsFlexibility': 'Terstruktur vs Fleksibel',\n      'introvertVsExtrovert': 'Introvert vs Ekstrovert',\n      'practicalVsConceptual': 'Praktis vs Konseptual',\n      'riskVsCaution': 'Pengambil Risiko vs Kehati-hatian',\n      'independentVsCollaborative': 'Mandiri vs Kolaboratif'\n    };\n    return titles[key] || key;\n  };\n\n  const getTraitName = (trait) => {\n    const traitNames = {\n      'structure': 'Terstruktur',\n      'flexibility': 'Fleksibel',\n      'introvert': 'Introvert',\n      'extrovert': 'Ekstrovert',\n      'practical': 'Praktis',\n      'conceptual': 'Konseptual',\n      'risk': 'Pengambil Risiko',\n      'caution': 'Kehati-hatian',\n      'independent': 'Mandiri',\n      'collaborative': 'Kolaboratif'\n    };\n    return traitNames[trait] || trait;\n  };\n\n  const renderDimensionResults = () => {\n    return Object.entries(results.dimensionScores).map(([dimension, score]) => {\n      // Skip if this dimension was not tested\n      if (!results.dimensionGroups[dimension]) return null;\n\n      const totalQuestions = results.dimensionGroups[dimension].length;\n      const scorePercentage = Math.round((score / totalQuestions) * 100);\n      const consistency = Math.round(results.dimensionConsistency[dimension] || 0);\n\n      // Determine positive and negative trait names\n      let positiveTrait, negativeTrait;\n      switch(dimension) {\n        case 'structureVsFlexibility':\n          positiveTrait = 'structure';\n          negativeTrait = 'flexibility';\n          break;\n        case 'introvertVsExtrovert':\n          positiveTrait = 'introvert';\n          negativeTrait = 'extrovert';\n          break;\n        case 'practicalVsConceptual':\n          positiveTrait = 'practical';\n          negativeTrait = 'conceptual';\n          break;\n        case 'riskVsCaution':\n          positiveTrait = 'caution';\n          negativeTrait = 'risk';\n          break;\n        case 'independentVsCollaborative':\n          positiveTrait = 'independent';\n          negativeTrait = 'collaborative';\n          break;\n        default:\n          positiveTrait = '';\n          negativeTrait = '';\n      }\n\n      // Count how many times each trait was chosen\n      const positiveCount = results.traitCounts[positiveTrait] || 0;\n      const negativeCount = results.traitCounts[negativeTrait] || 0;\n      \n      // Determine which trait is dominant\n      const dominantTrait = positiveCount >= negativeCount ? positiveTrait : negativeTrait;\n      const dominantPercentage = Math.round(\n        (Math.max(positiveCount, negativeCount) / (positiveCount + negativeCount)) * 100\n      ) || 0;\n\n      return (\n        <div key={dimension} className=\"bg-white rounded-lg shadow-md mb-4 overflow-hidden\">\n          <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 px-6 py-4\">\n            <h3 className=\"text-lg font-semibold text-blue-800\">{getDimensionTitle(dimension)}</h3>\n          </div>\n          <div className=\"p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <div>\n                <span className=\"text-gray-600\">Skor: </span>\n                <span className={`font-bold text-xl ${getTextColor(scorePercentage)}`}>\n                  {scorePercentage}%\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">Konsistensi: </span>\n                <span className={`font-bold ${consistency >= 75 ? 'text-green-600' : 'text-yellow-600'}`}>\n                  {consistency}%\n                </span>\n              </div>\n            </div>\n            \n            <div className=\"mt-4\">\n              <h4 className=\"font-medium text-gray-700 mb-2\">Hasil Analisis:</h4>\n              <p className=\"text-gray-600\">\n                Anda cenderung lebih <span className=\"font-bold text-blue-600\">{getTraitName(dominantTrait)}</span> \n                {' '}({dominantPercentage}%) dibandingkan\n                {' '}<span className=\"font-medium\">{getTraitName(dominantTrait === positiveTrait ? negativeTrait : positiveTrait)}</span>.\n              </p>\n              \n              <div className=\"mt-4 flex items-center\">\n                <div className=\"flex-1 text-right mr-2 text-gray-600 text-sm font-medium\">\n                  {getTraitName(positiveTrait)} ({positiveCount})\n                </div>\n                <div className=\"w-64 bg-gray-200 rounded-full h-2.5\">\n                  <div \n                    className=\"bg-blue-600 h-2.5 rounded-l-full\" \n                    style={{width: `${(positiveCount / (positiveCount + negativeCount)) * 100}%`}}\n                  />\n                </div>\n                <div className=\"flex-1 ml-2 text-gray-600 text-sm font-medium\">\n                  ({negativeCount}) {getTraitName(negativeTrait)}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 py-8 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-3xl mx-auto\">\n        <div className=\"text-center mb-10\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            {results.selectedDimension \n              ? `Hasil Tes ${getDimensionTitle(results.selectedDimension)}` \n              : 'Hasil Tes Learning Agility BUMN'}\n          </h1>\n          <p className=\"text-lg text-gray-600\">\n            Berikut adalah hasil analisis dari jawaban yang Anda berikan\n          </p>\n        </div>\n\n        <div className=\"bg-gradient-to-r rounded-lg shadow-lg mb-8 overflow-hidden p-0.5 ${getScoreColor(results.scorePercentage)}\">\n          <div className=\"bg-white rounded-lg p-6\">\n            <div className=\"text-center\">\n              <h2 className=\"text-2xl font-bold mb-2 text-gray-900\">Skor Akhir</h2>\n              <div className={`text-6xl font-bold mb-4 ${getTextColor(results.scorePercentage)}`}>\n                {results.scorePercentage}%\n              </div>\n              <p className=\"text-gray-600\">\n                Anda menjawab {results.finalScore} dari {results.maxPossibleScore} pertanyaan dengan konsisten\n              </p>\n              <div className=\"mt-4 text-sm\">\n                <span className=\"inline-block px-3 py-1 bg-blue-100 text-blue-800 rounded-full\">\n                  Konsistensi rata-rata: {Math.round(results.averageConsistency)}%\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mb-8\">\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Analisis per Dimensi</h2>\n          {renderDimensionResults()}\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-md overflow-hidden mb-8\">\n          <div className=\"p-6\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Interpretasi Hasil</h2>\n            <p className=\"text-gray-600 mb-4\">\n              Hasil tes ini memberikan gambaran tentang kecenderungan Anda dalam Lima dimensi utama learning agility. \n              Tidak ada jawaban yang benar atau salah, karena setiap orang memiliki preferensi dan gaya pembelajaran yang berbeda.\n            </p>\n            <p className=\"text-gray-600\">\n              Konsistensi jawaban menunjukkan seberapa konsisten Anda dalam menjawab pertanyaan untuk setiap dimensi. \n              Semakin tinggi konsistensi, semakin akurat hasil tes Anda.\n            </p>\n          </div>\n        </div>\n\n        <div className=\"text-center\">\n          <button \n            onClick={() => window.location.reload()}\n            className=\"px-6 py-3 bg-blue-600 text-white rounded-lg shadow hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors\"\n          >\n            Kembali ke Halaman Utama\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsScreen;